local d={["Quinn"]="https://raw.githubusercontent.com/yaddle/GosExt/master/Icons/Behind_Enemy_Lines.png"}class"Need"function Need:__init()self.Tard_version=1.22;print("Hello ",myHero.name,", TardQuinn v",self.Tard_version," is ready to feed")self.DamageReductionTable={["Braum"]={buff="BraumShieldRaise",amount=function(e)return 1-({.3,.325,.35,.375,.4})[e:GetSpellData(_E).level]end},["Urgot"]={buff="urgotswapdef",amount=function(e)return 1-({.3,.4,.5})[e:GetSpellData(_R).level]end},["Alistar"]={buff="Ferocious Howl",amount=function(e)return({.5,.4,.3})[e:GetSpellData(_R).level]end},["Amumu"]={buff="Tantrum",amount=function(e)return({2,4,6,8,10})[e:GetSpellData(_E).level]end,damageType=1},["Galio"]={buff="GalioIdolOfDurand",amount=function(e)return.5 end},["Garen"]={buff="GarenW",amount=function(e)return.7 end},["Gragas"]={buff="GragasWSelf",amount=function(e)return({.1,.12,.14,.16,.18})[e:GetSpellData(_W).level]end},["Annie"]={buff="MoltenShield",amount=function(e)return 1-({.16,.22,.28,.34,.4})[e:GetSpellData(_E).level]end},["Malzahar"]={buff="malzaharpassiveshield",amount=function(e)return.1 end}}if _G.EOWLoaded then self.Tard_Orb=1;print("Don't use Toshi Orb dude, he is toxic ^^")elseif _G.SDK and _G.SDK.Orbwalker then self.Tard_Orb=2;print("IC is a good Orb")self.Tard_SDK=_G.SDK.Orbwalker;self.Tard_SDKCombo=_G.SDK.ORBWALKER_MODE_COMBO;self.Tard_SDKHarass=_G.SDK.ORBWALKER_MODE_HARASS;self.Tard_SDKJungleClear=_G.SDK.ORBWALKER_MODE_JUNGLECLEAR;self.Tard_SDKLaneClear=_G.SDK.ORBWALKER_MODE_LANECLEAR;self.Tard_SDKLastHit=_G.SDK.ORBWALKER_MODE_LASTHIT;self.Tard_SDKFlee=_G.SDK.ORBWALKER_MODE_FLEE;self.Tard_SDKSelector=_G.SDK.TargetSelector;self.Tard_SDKDamagePhysical=_G.SDK.DAMAGE_TYPE_PHYSICAL elseif _G.__gsoOrbwalker then self.Tard_Orb=3;print("gamsteronOrb Loaded by Gamsteron the Genius Dev")self.LocalgsoOrbwalker=__gsoOrbwalker()self.LocalgsoGetTarget=self.LocalgsoOrbwalker.GetTarget;self.LocalGSOMode=self.LocalgsoOrbwalker.Mode;self.LocalgsoObjects=self.LocalgsoOrbwalker.Objects;self.LocalGSOState=self.LocalgsoOrbwalker.State else if Orbwalker.Enabled:Value()then self.Tard_Orb=4;print("Noddy rocks")else self.Tard_Orb=5;print("WARNING : you're not using any Orb")end end end;function Need:Tard_HasBuff(e,a)for t=0,e.buffCount do local e=e:GetBuff(t)if e and e.name~=""and e.count>0 and Game.Timer()>=e.startTime and Game.Timer()<e.expireTime and e.name==a then return e.count end end;return 0 end;function Need:Tard_GetDistanceSqr(e,t)local t=t or myHero.pos;local a=e.x-t.x;local e=(e.z or e.y)-(t.z or t.y)return a*a+e*e end;function Need:Tard_GetDistance(t,e)return math.sqrt(self:Tard_GetDistanceSqr(t,e))end;function Need:Tard_IsValidTarget(e,t)local t=t or math.huge;return e and e.team~=myHero.team and e.valid and Need:Tard_GetDistanceSqr(e.pos)<=t*t and e.visible and e.isTargetable and not e.dead and not e.isImmune end;function Need:Tard_GetMode()if self.Tard_Orb==1 then if EOW.CurrentMode==1 then return"Combo"elseif EOW.CurrentMode==2 then return"Harass"elseif EOW.CurrentMode==3 then return"Lasthit"elseif EOW.CurrentMode==4 then return"Clear"end elseif self.Tard_Orb==2 then if self.Tard_SDK.Modes[self.Tard_SDKCombo]then return"Combo"elseif self.Tard_SDK.Modes[self.Tard_SDKHarass]then return"Harass"elseif self.Tard_SDK.Modes[self.Tard_SDKLaneClear]or self.Tard_SDK.Modes[self.Tard_SDKJungle]then return"Clear"elseif self.Tard_SDK.Modes[self.Tard_SDKLastHit]then return"LastHit"elseif self.Tard_SDK.Modes[self.Tard_SDKFlee]then return"Flee"end elseif Orb==3 then if self.LocalGSOMode.isCombo()then return"Combo"elseif self.LocalGSOMode.isHarass()then return"Harass"elseif self.LocalGSOMode.isLaneClear()then return"Clear"elseif self.LocalGSOMode.isLastHit()then return"LastHit"end else return GOS:GetMode()end end;function Need:Tard_QuinnTarget(t)local e;if self.Tard_Orb==1 then e=EOW:GetTarget(t,ad_dec)elseif self.Tard_Orb==2 then e=self.Tard_SDKSelector:GetTarget(t,self.Tard_SDKDamagePhysical)elseif self.Tard_Orb==3 then local a=self.LocalgsoObjects.enemyHeroes_spell;e=self.LocalgsoGetTarget(t,a,myHero.pos,false,false)else e=GOS:GetTarget(t,"AD")end;return e end;local e={state=0,tick=GetTickCount(),casting=GetTickCount()-1e3,mouse=mousePos}function Need:Tard_CastSpell(i,a,t)local o=t or 250;if a==nil then return end;local t=GetTickCount()if e.state==0 and t-e.casting>o+Game.Latency()then e.state=1;e.mouse=mousePos;e.tick=t end;if e.state==1 then if t-e.tick<Game.Latency()then Control.SetCursorPos(a)Control.KeyDown(i)Control.KeyUp(i)e.casting=t+o;DelayAction(function()if e.state==1 then Control.SetCursorPos(e.mouse)e.state=0 end end,Game.Latency()/1e3)end;if t-e.casting>Game.Latency()then Control.SetCursorPos(e.mouse)e.state=0 end end end;function Need:GetItemSlot(t,a)for e=ITEM_1,ITEM_7 do if t:GetItemData(e).itemID==a then return e end end;return 0 end;function Need:CalcPhysicalDamage(e,t,a)local o=e.armorPenPercent;local s=(.4+t.levelData.lvl/30)*e.armorPen;local n=e.bonusArmorPenPercent;if e.type==Obj_AI_Minion then o=1;s=0;n=1 elseif e.type==Obj_AI_Turret then s=0;n=1;if e.charName:find("3")or e.charName:find("4")then o=.25 else o=.7 end end;if e.type==Obj_AI_Turret then if t.type==Obj_AI_Minion then a=a*1.25;string.ends=function(t,e)return e==""or string.sub(t,-string.len(e))==e end;if string.ends(t.charName,"MinionSiege")then a=a*.7 end;return a end end;local i=t.armor;local r=t.bonusArmor;local h=100/(100+i*o-r*(1-n)-s)if i<0 then h=2-100/(100-i)elseif i*o-r*(1-n)-s<0 then h=1 end;return math.max(0,math.floor(Need:DamageReductionMod(e,t,Need:PassivePercentMod(e,t,h)*a,1)))end;function Need:DamageReductionMod(o,t,e,i)if o.type==Obj_AI_Hero then if self:Tard_HasBuff(o,"Exhaust")>0 then e=e*.6 end end;if t.type==Obj_AI_Hero then for a=0,t.buffCount do if t:GetBuff(a).count>0 then local a=t:GetBuff(a)if a.name=="w"then e=e*(1-.06*a.count)end;if self.DamageReductionTable[t.charName]then if a.name==self.DamageReductionTable[t.charName].buff and(not self.DamageReductionTable[t.charName].damagetype or self.DamageReductionTable[t.charName].damagetype==i)then e=e*self.DamageReductionTable[t.charName].amount(t)end end;if t.charName=="Maokai"and o.type~=Obj_AI_Turret then if a.name=="MaokaiDrainDefense"then e=e*.8 end end;if t.charName=="MasterYi"then if a.name=="Meditate"then e=e-e*({.5,.55,.6,.65,.7})[t:GetSpellData(_W).level]/(o.type==Obj_AI_Turret and 2 or 1)end end end end;if self:GetItemSlot(t,1054)>0 then e=e-8 end;if t.charName=="Kassadin"and i==2 then e=e*.85 end end;return e end;function Need:PassivePercentMod(e,a,t,n)local i={"Red_Minion_MechCannon","Blue_Minion_MechCannon"}local o={"Red_Minion_Wizard","Blue_Minion_Wizard","Red_Minion_Basic","Blue_Minion_Basic"}if e.type==Obj_AI_Turret then if table.contains(i,a.charName)then t=t*.7 elseif table.contains(o,a.charName)then t=t*1.14285714285714 end end;if e.type==Obj_AI_Hero then if a.type==Obj_AI_Hero then if(Need:GetItemSlot(e,3036)>0 or Need:GetItemSlot(e,3034)>0)and e.maxHealth<a.maxHealth and n==1 then t=t*(1+math.min(a.maxHealth-e.maxHealth,500)/50*(Need:GetItemSlot(e,3036)>0 and.015 or.01))end end end;return t end;class"TardQuinn"function TardQuinn:__init()require("Eternal Prediction")self.Tard_QuinnSpells={[0]={range=myHero:GetSpellData(0).range,delay=.25,speed=myHero:GetSpellData(0).speed,width=myHero:GetSpellData(0).width},[1]={range=myHero:GetSpellData(1).range,delay=0,speed=myHero:GetSpellData(1).speed,width=myHero:GetSpellData(1).width},[2]={range=myHero:GetSpellData(2).range,delay=.25,speed=myHero:GetSpellData(2).speed,width=myHero:GetSpellData(2).width},[3]={range=myHero:GetSpellData(3).range,delay=.25,speed=myHero:GetSpellData(3).speed,width=myHero:GetSpellData(3).width}}self.Tard_QuinnDmg={[0]=function(t)local e=myHero:GetSpellData(0).level;return Need:CalcPhysicalDamage(myHero,t,({20,45,70,95,120})[e]+({.8,.9,1,1.1,1.2})[e]*myHero.totalDamage+.5*myHero.ap)end,[2]=function(e)local t=myHero:GetSpellData(2).level;return Need:CalcPhysicalDamage(myHero,e,({40,70,100,130,160})[t]+.2*myHero.bonusDamage)end,[3]=function(e)local t=myHero:GetSpellData(3).level;return Need:CalcPhysicalDamage(myHero,e,.4*myHero.totalDamage)end}if _G.Prediction_Loaded then self.Tard_EternalPred=true;print("Tosh Pred loaded ;)")self.Tard_QPred=Prediction:SetSpell(self.Tard_QuinnSpells[0],TYPE_LINE,true)end;if myHero.team==100 then self.Tard_RecallPosition=Vector(396,182.132507324219,462)else self.Tard_RecallPosition=Vector(14340,171.977722167969,14390)end;self.mathsqrt=math.sqrt;self:Tard_Menu()Callback.Add("Tick",function()self:Tard_Tick()end)Callback.Add("Draw",function()self:Tard_Draw()end)end;function TardQuinn:Tard_Menu()self.Tard_TardMenu=MenuElement({type=MENU,id="TardQuinnMenu",name="TardQuinn",leftIcon=d.Quinn})self.Tard_TardMenu:MenuElement({type=MENU,id="Combo",name="Combo Settings"})self.Tard_TardMenu.Combo:MenuElement({id="ComboQ",name="Use Q",value=true})self.Tard_TardMenu.Combo:MenuElement({id="ComboW",name="Use W if lose vision in AA range",value=true})self.Tard_TardMenu.Combo:MenuElement({id="ComboE",name="Use E",value=false})self.Tard_TardMenu:MenuElement({type=MENU,id="Harass",name="Harass Settings"})self.Tard_TardMenu.Harass:MenuElement({id="HarassQ",name="Use Q",value=true})self.Tard_TardMenu.Harass:MenuElement({id="HarassW",name="Use W if lose vision in AA range",value=true})self.Tard_TardMenu.Harass:MenuElement({id="HarassE",name="Use E",value=false})self.Tard_TardMenu.Harass:MenuElement({id="HarassMana",name="Min. Mana",value=40,min=0,max=100})self.Tard_TardMenu:MenuElement({type=MENU,id="Farm",name="Farm Settings"})self.Tard_TardMenu.Farm:MenuElement({id="FarmQ",name="Use Q",value=true})self.Tard_TardMenu.Farm:MenuElement({id="FarmW",name="Use W",value=true})self.Tard_TardMenu.Farm:MenuElement({id="FarmE",name="Use E",value=true})self.Tard_TardMenu.Farm:MenuElement({id="FarmMana",name="Min. Mana",value=40,min=0,max=100})self.Tard_TardMenu:MenuElement({type=MENU,id="Misc",name="Misc Settings"})self.Tard_TardMenu.Misc:MenuElement({id="Passive",name="Block spell if target is under passive",value=true,tooltip="more dps, less burst"})self.Tard_TardMenu.Misc:MenuElement({id="AntiGap",name="Anti Gapcloser",value=true})self.Tard_TardMenu.Misc:MenuElement({id="NotQ_underR",name="Block Q under Ulti (more dps, less burst)",value=true})self.Tard_TardMenu.Misc:MenuElement({id="E_AAreset",name="Use E to reset AA (more dps, less burst)",value=true})self.Tard_TardMenu.Misc:MenuElement({id="Rrecall",name="Auto use R after recall",value=true})self.Tard_TardMenu:MenuElement({type=MENU,id="KS",name="KillSteal Settings"})self.Tard_TardMenu.KS:MenuElement({id="Q_KS",name="Use Q to try to KillSteal",value=true})self.Tard_TardMenu.KS:MenuElement({id="E_KS",name="Use E to try to KillSteal",value=true})self.Tard_TardMenu.KS:MenuElement({id="R_KS",name="Use R to try to KillSteal",value=true})if self.Tard_EternalPred then self.Tard_TardMenu:MenuElement({type=MENU,id="Pred",name="Prediction Settings"})self.Tard_TardMenu.Pred:MenuElement({id="PredHitChance",name="HitChance (default 25)",value=25,min=0,max=100,tooltip="higher value better pred but slower.  ||don't change it if don't know what is it||"})end;self.Tard_TardMenu:MenuElement({type=MENU,id="Draw",name="Drawing Settings"})self.Tard_TardMenu.Draw:MenuElement({id="DrawReady",name="Draw Only Ready Spells [?]",value=true,tooltip="Only draws spells when they're ready"})self.Tard_TardMenu.Draw:MenuElement({id="DrawQ",name="Draw Q Range",value=true})self.Tard_TardMenu.Draw:MenuElement({id="DrawW",name="Draw W Range",value=true})self.Tard_TardMenu.Draw:MenuElement({id="DrawE",name="Draw E Range",value=true})self.Tard_TardMenu.Draw:MenuElement({id="DrawTarget",name="Draw Target [?]",value=true,tooltip="Draws current target"})PrintChat("Menu Ok")end;function TardQuinn:Tard_Tick()if myHero.dead then return end;local e=Need:Tard_GetMode()if e=="Combo"then self:Tard_Combo()elseif e=="Harass"then self:Tard_Harass()end;if self.Tard_TardMenu.Misc.AntiGap:Value()then self:Tard_AntiGapCloser()end;if self.Tard_TardMenu.KS.Q_KS:Value()or self.Tard_TardMenu.KS.E_KS:Value()or self.Tard_TardMenu.KS.R_KS:Value()then self:Tard_KillSteal()end;self:Tard_AutoRatBase()end;function TardQuinn:Tard_Combo()local e=Need:Tard_QuinnTarget(925)if e==nil then return end;if Need:Tard_IsValidTarget(e,925)then local a=myHero.attackData.state;local t=myHero.range;if self.Tard_TardMenu.Combo.ComboW:Value()then self:Tard_Vision(myHero.range+myHero.boundingRadius+e.boundingRadius)end;if self.Tard_TardMenu.Combo.ComboQ:Value()and a~=2 and Game.CanUseSpell(_Q)==0 then if Need:Tard_GetDistanceSqr(e.pos)>(t+myHero.boundingRadius+e.boundingRadius)*(t+myHero.boundingRadius+e.boundingRadius)or(Need:Tard_HasBuff(e,"QuinnW")==0 or not self.Tard_TardMenu.Misc.Passive:Value())and(Need:Tard_HasBuff(myHero,"QuinnR")==0 or not self.Tard_TardMenu.Misc.NotQ_underR:Value())then self:Tard_CastQ(e)end elseif self.Tard_TardMenu.Combo.ComboE:Value()and(a==3 or not self.Tard_TardMenu.Misc.E_AAreset:Value())and Game.CanUseSpell(_E)==0 then if Need:Tard_GetDistanceSqr(e.pos)>(t+myHero.boundingRadius+e.boundingRadius)*(t+myHero.boundingRadius+e.boundingRadius)or(Need:Tard_HasBuff(e,"QuinnW")==0 or not self.Tard_TardMenu.Misc.Passive:Value())then self:Tard_CastE(e)end end end end;function TardQuinn:Tard_Harass()local e=Need:Tard_QuinnTarget(925)if e==nil then return end;if Need:Tard_IsValidTarget(e,925)then local a=myHero.attackData.state;local t=myHero.range;if self.Tard_TardMenu.Harass.HarassW:Value()and myHero.mana/myHero.maxMana>=self.Tard_TardMenu.Harass.HarassMana:Value()/100 then self:Tard_Vision(myHero.range+myHero.boundingRadius+e.boundingRadius)end;if self.Tard_TardMenu.Harass.HarassQ:Value()and myHero.mana/myHero.maxMana>=self.Tard_TardMenu.Harass.HarassMana:Value()/100 and a~=2 and Game.CanUseSpell(_Q)==0 then if Need:Tard_GetDistanceSqr(e.pos)>(t+myHero.boundingRadius+e.boundingRadius)*(t+myHero.boundingRadius+e.boundingRadius)or(Need:Tard_HasBuff(e,"QuinnW")==0 or not self.Tard_TardMenu.Misc.Passive:Value())and(Need:Tard_HasBuff(myHero,"QuinnR")==0 or not self.Tard_TardMenu.Misc.NotQ_underR:Value())then self:Tard_CastQ(e)end elseif self.Tard_TardMenu.Harass.HarassE:Value()and myHero.mana/myHero.maxMana>=self.Tard_TardMenu.Harass.HarassMana:Value()/100 and(a==3 or not self.Tard_TardMenu.Misc.E_AAreset:Value())and Game.CanUseSpell(_E)==0 then if Need:Tard_GetDistanceSqr(e.pos)>(t+myHero.boundingRadius+e.boundingRadius)*(t+myHero.boundingRadius+e.boundingRadius)or(Need:Tard_HasBuff(e,"QuinnW")==0 or not self.Tard_TardMenu.Misc.Passive:Value())then self:Tard_CastE(e)end end end end;function TardQuinn:Tard_KillSteal()for e=1,Game.HeroCount()do local e=Game.Hero(e)if Need:Tard_GetDistanceSqr(e.pos)<=self.Tard_QuinnSpells[0].range*self.Tard_QuinnSpells[0].range and Need:Tard_IsValidTarget(e)then local t=0;local a=0;local o=0;if self.Tard_TardMenu.KS.Q_KS:Value()and Game.CanUseSpell(_Q)==0 then t=self.Tard_QuinnDmg[0](e)end;if self.Tard_TardMenu.KS.E_KS:Value()and Game.CanUseSpell(_E)==0 then a=self.Tard_QuinnDmg[2](e)end;if self.Tard_TardMenu.KS.R_KS:Value()and Need:Tard_HasBuff(myHero,"QuinnR")==1 then o=self.Tard_QuinnDmg[3](e)end;if a>0 and e.health+e.shieldAD<a then print("Kill Steal E working")self:Tard_CastE(e)break elseif t>0 and e.health+e.shieldAD<t then print("Kill Steal Q working")self:Tard_CastQ(e)break elseif a>0 and t>0 and e.health+e.shieldAD<a+t then print("Kill Steal E+Q working")self:Tard_CastE(e)DelayAction(function()self:Tard_CastQ(e)end,.25+self.Tard_QuinnSpells[0].delay)break elseif(a>0 or t>0)and o>0 and e.health+e.shieldAD<a+t+o then print("Kill Steal E+Q+R working")if a>0 then self:Tard_CastE(e)end;if t>0 then DelayAction(function()self:Tard_CastQ(e)end,.25+self.Tard_QuinnSpells[0].delay)break end;return end end end end;function TardQuinn:Tard_AntiGapCloser()for e=1,Game.HeroCount()do local e=Game.Hero(e)if Game.CanUseSpell(_E)==0 and Need:Tard_IsValidTarget(e,300)and Need:Tard_GetDistanceSqr(e.pos)>Need:Tard_GetDistanceSqr(e.posTo)then self:Tard_CastE(e)break end end end;function TardQuinn:Tard_CastQ(t)if t then if self.Tard_EternalPred==true then local e=self.Tard_QPred:GetPrediction(t,myHero.pos)if e and e.hitChance>=self.Tard_TardMenu.Pred.PredHitChance:Value()/100 and e:mCollision()==0 and e:hCollision()==0 then Need:Tard_CastSpell(HK_Q,e.castPos,250)end else local e=t:GetPrediction(self.Tard_QuinnSpells[0].speed,self.Tard_QuinnSpells[0].delay+Game.Latency()/1e3)local t=t:GetCollision(self.Tard_QuinnSpells[0].width,self.Tard_QuinnSpells[0].speed,self.Tard_QuinnSpells[0].delay)if Game.CanUseSpell(_Q)==0 and t==0 and Need:Tard_GetDistanceSqr(myHero.pos,e)<self.Tard_QuinnSpells[0].range*self.Tard_QuinnSpells[0].range then DelayAction(function()Need:Tard_CastSpell(HK_Q,e,250)end,self.Tard_QuinnSpells[0].delay)end end end;return false end;function TardQuinn:Tard_CastE(e)if e then if Game.CanUseSpell(_E)==0 then Control.CastSpell(HK_E,e)end end;return false end;function TardQuinn:Tard_Vision(t)if Game.CanUseSpell(1)==0 then for e=1,Game.HeroCount()do local e=Game.Hero(e)if e and e.team~=myHero.team and not e.visible and not e.dead and Need:Tard_GetDistanceSqr(e.pos)<=t*t and Game.CanUseSpell(_W)==0 then Control.CastSpell(HK_W)break end end end end;function TardQuinn:Tard_AutoRatBase()if self.Tard_TardMenu.Misc.Rrecall:Value()then if Game.CanUseSpell(_R)==0 and myHero:GetSpellData(_R).name=="QuinnR"then local e=myHero.pos;local e=Need:Tard_GetDistanceSqr(e,self.Tard_RecallPosition)if e<self.Tard_RecallPosition.y*self.Tard_RecallPosition.y then Control.CastSpell(HK_R)end end end end;function TardQuinn:Tard_Draw()if myHero.dead then return end;local t=myHero.pos;local e=self.Tard_TardMenu.Draw;if self.Tard_TardMenu.Draw.DrawReady:Value()then local a=Game.CanUseSpell;if a(_Q)==0 and e.DrawQ:Value()then Draw.Circle(t,self.Tard_QuinnSpells[0].range,1,Draw.Color(255,96,203,67))end;if a(_W)==0 and e.DrawW:Value()then Draw.Circle(t,self.Tard_QuinnSpells[1].range,1,Draw.Color(255,255,255,255))end;if a(_E)==0 and e.DrawE:Value()then Draw.Circle(t,self.Tard_QuinnSpells[2].range,1,Draw.Color(255,255,255,255))end else if e.DrawQ:Value()then Draw.Circle(t,self.Tard_QuinnSpells[0].range,1,Draw.Color(255,96,203,67))end;if e.DrawW:Value()then Draw.Circle(t,self.Tard_QuinnSpells[1].range,1,Draw.Color(255,255,255,255))end;if e.DrawE:Value()then Draw.Circle(t,self.Tard_QuinnSpells[2].range,1,Draw.Color(255,255,255,255))end end;if e.DrawTarget:Value()then local e=Need:Tard_QuinnTarget(925)if e then Draw.Circle(e.pos,80,3,Draw.Color(255,255,0,0))end end end;Callback.Add("Load",function()if _G["TardQuinn"]and myHero.charName=="Quinn"then _G["TardQuinn"]()_G.Need=Need()end end)
